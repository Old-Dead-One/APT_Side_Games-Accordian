"""initial revision

Revision ID: 4f479a714553
Revises: 33e31b4b3f4d
Create Date: 2024-05-14 10:40:27.708716

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4f479a714553'
down_revision: Union[str, None] = '33e31b4b3f4d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chapter',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('chapter_id')
    )
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('course', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapter.chapter_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('player',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('division', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('venmo_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('home_chapter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['home_chapter_id'], ['chapter.chapter_id'], ),
    sa.PrimaryKeyConstraint('player_id')
    )
    op.create_table('contest',
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.PrimaryKeyConstraint('contest_id')
    )
    op.create_table('playerchapterlink',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapter.chapter_id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ),
    sa.PrimaryKeyConstraint('player_id', 'chapter_id')
    )
    op.create_table('playereventlink',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ),
    sa.PrimaryKeyConstraint('player_id', 'event_id')
    )
    op.create_table('playercart',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapter.chapter_id'], ),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.contest_id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ),
    sa.PrimaryKeyConstraint('player_id', 'chapter_id', 'event_id', 'contest_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playercart')
    op.drop_table('playereventlink')
    op.drop_table('playerchapterlink')
    op.drop_table('contest')
    op.drop_table('player')
    op.drop_table('event')
    op.drop_table('chapter')
    # ### end Alembic commands ###
